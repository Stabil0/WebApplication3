// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication3.Models;

namespace WebApplication3.Migrations
{
    [DbContext(typeof(restoranContext))]
    partial class restoranContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication3.Models.Emploeey", b =>
                {
                    b.Property<int>("EmployeeCode")
                        .HasColumnName("Employee_code")
                        .HasColumnType("INT");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("CHAR (255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnName("Full_name")
                        .HasColumnType("CHAR (255)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("CHAR (50)");

                    b.Property<int>("Old")
                        .HasColumnType("INT");

                    b.Property<int>("PassportData")
                        .HasColumnName("Passport_data")
                        .HasColumnType("INT");

                    b.Property<int>("Phone")
                        .HasColumnType("INT");

                    b.Property<int>("PositionCode")
                        .HasColumnName("Position_code")
                        .HasColumnType("INT");

                    b.HasKey("EmployeeCode");

                    b.HasIndex("PositionCode");

                    b.ToTable("Emploeey");
                });

            modelBuilder.Entity("WebApplication3.Models.Menu", b =>
                {
                    b.Property<int>("DishCode")
                        .HasColumnName("Dish_Code")
                        .HasColumnType("INT");

                    b.Property<int>("Cost")
                        .HasColumnType("INT");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnName("Dish_name")
                        .HasColumnType("CHAR (255)");

                    b.Property<int>("IngredientCode")
                        .HasColumnName("Ingredient_code")
                        .HasColumnType("INT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("DateTime");

                    b.Property<int>("Volume1")
                        .HasColumnName("volume_1")
                        .HasColumnType("INT");

                    b.Property<int>("Volume2")
                        .HasColumnName("volume_2")
                        .HasColumnType("INT");

                    b.Property<int>("Volume3")
                        .HasColumnName("volume_3")
                        .HasColumnType("INT");

                    b.HasKey("DishCode");

                    b.HasIndex("IngredientCode");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("WebApplication3.Models.Orde", b =>
                {
                    b.Property<string>("CustomerName")
                        .HasColumnName("Customer_name")
                        .HasColumnType("CHAR (255)");

                    b.Property<int>("Chec")
                        .HasColumnType("INT");

                    b.Property<int>("Cost")
                        .HasColumnType("INT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("DateTime");

                    b.Property<int>("DishCode")
                        .HasColumnName("Dish_Code")
                        .HasColumnType("INT");

                    b.Property<int>("EmployeeCode")
                        .HasColumnName("Employee_code")
                        .HasColumnType("INT");

                    b.Property<int>("Phone")
                        .HasColumnType("INT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("DateTime");

                    b.HasKey("CustomerName");

                    b.HasIndex("DishCode");

                    b.HasIndex("EmployeeCode");

                    b.ToTable("Orde");
                });

            modelBuilder.Entity("WebApplication3.Models.Position", b =>
                {
                    b.Property<int>("PositionCode")
                        .HasColumnName("Position_code")
                        .HasColumnType("INT");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnName("Job_title")
                        .HasColumnType("CHAR (255)");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("CHAR (255)");

                    b.Property<string>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("CHAR (255)");

                    b.Property<int>("Salary")
                        .HasColumnType("INT");

                    b.HasKey("PositionCode");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("WebApplication3.Models.Warehouse", b =>
                {
                    b.Property<int>("IngredientCode")
                        .HasColumnName("Ingredient_code")
                        .HasColumnType("INT");

                    b.Property<int>("Cost")
                        .HasColumnType("INT");

                    b.Property<int>("Data")
                        .HasColumnType("INT");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnName("Ingredient_name")
                        .HasColumnType("CHAR (255)");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("CHAR (255)");

                    b.Property<DateTime>("ShelfIfe")
                        .HasColumnName("Shelf__ife")
                        .HasColumnType("DateTime");

                    b.Property<int>("Volume")
                        .HasColumnType("INT");

                    b.HasKey("IngredientCode");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("WebApplication3.Models.Emploeey", b =>
                {
                    b.HasOne("WebApplication3.Models.Position", "PositionCodeNavigation")
                        .WithMany("Emploeeys")
                        .HasForeignKey("PositionCode")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication3.Models.Menu", b =>
                {
                    b.HasOne("WebApplication3.Models.Warehouse", "IngredientCodeNavigation")
                        .WithMany("Menus")
                        .HasForeignKey("IngredientCode")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication3.Models.Orde", b =>
                {
                    b.HasOne("WebApplication3.Models.Menu", "DishCodeNavigation")
                        .WithMany("Ordes")
                        .HasForeignKey("DishCode")
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.Emploeey", "EmployeeCodeNavigation")
                        .WithMany("Ordes")
                        .HasForeignKey("EmployeeCode")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
